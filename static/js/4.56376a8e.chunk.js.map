{"version":3,"sources":["page-components/ipfs-node/index.js","assets/images/preview.jpg","pages/LandingPage/index.js"],"names":["IPFSNode","props","state","node","workspace","info","this","startNode","then","console","log","initNode","nodex","localStorage","getItem","asyncLocalStorage","encryptionKey","eworker","dworker","clearDbs","generateKey","setItem","Date","getTime","Math","random","Ipfs","repo","config","Addresses","Swarm","Bootstrap","Pubsub","Enabled","id","onError","onSuccess","subscribeToWorkpsace","message","window","addEventListener","a","workspaceUpdated","Component","IPFS","connect","dispatch","initIPFS","messageHandler","pubsub","subscribe","unsubscribe","location","hash","replace","module","exports","LandingPage","className","style","backgroundImage","hero9","Container","maxWidth","Grid","container","spacing","item"],"mappings":"oSAmBMA,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,KAAM,GACNC,UAAW,GACXC,KAAM,IALS,E,iFASE,IAAD,OAClBC,KAAKC,YAAYC,MAAK,WAAK,IACfL,EAAS,EAAKD,MAAdC,KACRM,QAAQC,IAAIP,EAAK,YAEjB,EAAKF,MAAMU,SAASR,Q,+JAMpBS,EAAQC,aAAaC,QAAQ,U,SACPC,IAAkBD,QAAQ,iB,cAAhDE,E,gBAEkBD,IAAkBD,QAAQ,W,cAA1CG,E,gBACgBF,IAAkBD,QAAQ,W,UAA1CI,E,OACNT,QAAQC,IAAI,CAAEO,UAASC,YACnBD,EACFE,YAAS,UAAWF,GACXC,GACTC,YAAS,UAAWD,GAGjBF,E,6BAEGD,I,UAEEK,YAAY,Q,0CAFIC,Q,UACtB,gB,qBAICT,IACHA,GACE,IAAIU,MAAOC,UACXC,KAAKC,SACLD,KAAKC,SACLD,KAAKC,SACLD,KAAKC,SACPZ,aAAaQ,QAAQ,SAAUT,I,UAETc,SAAY,CAClCC,KAAM,QAAUf,EAChBgB,OAAQ,CACNC,UAAW,CACTC,MAAO,IAOTC,UAAW,CACT,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,6FACA,6FACA,6FACA,8FAGFC,OAAQ,CACNC,SAAS,M,eAzBf3B,KAAKJ,MAAMC,K,2BA+BeG,KAAKJ,MAAMC,KAAK+B,K,QAAxC5B,KAAKJ,MAAMG,K,OACXI,QAAQC,IAAIJ,KAAKJ,MAAMG,KAAM,Q,4EAmBtB8B,YAAQ,EAAD,K,eAGhBC,YAAU,kB,oBAIFC,I,2DAEJ5B,QAAQC,IAAR,KAAgB,SAElB,KAAI4B,QAAJ,gDAAuD,KAAIA,S,QAI7DC,OAAOC,iBAAiB,aAAxB,sBAAsC,sBAAAC,EAAA,+EAE5BC,IAF4B,sDAIlC,KAAIJ,QAAJ,wDAA+D,KAAIA,SACnEH,YAAQ,EAAD,IAL2B,yD,wJAUrB7B,KAAKJ,MAAdG,KACR,OACE,mC,GA/HiBsC,aAgJjBC,EAAOC,YAAQ,MAtJrB,SAA4BC,GAC1B,MAAO,CACLnC,SAAU,SAAAR,GAAI,OAAI2C,EAASC,YAAS5C,QAoJ3B0C,CAAkC7C,GAMzCgD,EAAiB,SAAAV,KAkBjBD,EAAoB,uCAAG,sBAAAI,EAAA,sEACrB,EAAKvC,MAAMC,KAAK8C,OAAOC,UAAU,EAAKhD,MAAME,UAAW4C,GADlC,0CAEa,EAAK9C,MAAME,UAFxB,gDAAH,qDAOpBsC,EAAgB,uCAAG,sBAAAD,EAAA,sEACjB,EAAKvC,MAAMC,KAAK8C,OAAOE,YAAY,EAAKjD,MAAME,WAD7B,cAOvB,EAAKF,MAAME,UAAYmC,OAAOa,SAASC,KAAKC,QAAQ,KAAM,IAPnC,SAQjBjB,IARiB,2CAAH,qDAePO,Q,4GCjNfW,EAAOC,QAAU,IAA0B,qC,iJC+D5BC,UArDK,WAClB,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,MACG,yBAAKC,UAAU,+DACd,yBAAKA,UAAU,+CACb,yBACEA,UAAU,uCACVC,MAAO,CAAEC,gBAAiB,OAASC,IAAQ,OAE7C,kBAAC,IAAD,MACA,yBAAKH,UAAU,gDACf,yBAAKA,UAAU,oDACf,yBAAKA,UAAU,mEACb,kBAACI,EAAA,EAAD,CAAWC,SAAS,KAAKL,UAAU,QACjC,kBAACM,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CACEG,MAAI,EACHT,UAAU,0CACX,yBAAKA,UAAU,gBAKb,yBAAKA,UAAU,gCAMb,kBAAC,IAAD,MAEA,kBAAC,IAAD,MAQA,yBAAKA,UAAU","file":"static/js/4.56376a8e.chunk.js","sourcesContent":["// src/js/components/Form.jsx\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { initIPFS } from '../../reducers/data';\nimport * as Ipfs from 'ipfs';\nimport {\n  asyncLocalStorage,\n  onError,\n  onSuccess,\n  generateKey,\n  clearDbs\n} from '../../utils/helper';\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    initNode: node => dispatch(initIPFS(node))\n  };\n}\n\nclass IPFSNode extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      node: {},\n      workspace: {},\n      info: {}\n    };\n  }\n\n  componentDidMount() {\n    this.startNode().then(()=>{\n        const { node } = this.state;\n        console.log(node,'nodenode');\n        \n        this.props.initNode(node);\n    })\n \n  }\n  async startNode() {\n    // const nowtime = new Date().getTime();\n    let nodex = localStorage.getItem('nodeid');\n    let encryptionKey = await asyncLocalStorage.getItem('encryptionKey');\n    // console.log({ encryptionKey });\n    const eworker = await asyncLocalStorage.getItem('eworker');\n    const dworker = await asyncLocalStorage.getItem('dworker');\n    console.log({ eworker, dworker });\n    if (eworker) {\n      clearDbs('eworker', eworker);\n    } else if (dworker) {\n      clearDbs('dworker', dworker);\n    } else {\n    }\n    if (!encryptionKey) {\n      // call generate key\n      await asyncLocalStorage.setItem(\n        'encryptionKey',\n        await generateKey('test')\n      );\n    }\n    if (!nodex) {\n      nodex =\n        new Date().getTime() +\n        Math.random() +\n        Math.random() +\n        Math.random() +\n        Math.random();\n      localStorage.setItem('nodeid', nodex);\n    }\n    this.state.node = await Ipfs.create({\n      repo: 'ipfs-' + nodex,\n      config: {\n        Addresses: {\n          Swarm: [\n            // This is a public webrtc-star server\n            // '/dns4/star-signal.cloud.ipfs.team/tcp/443/wss/p2p-webrtc-star'\n            //'/dns4/higdon.space/tcp/80/ws/p2p-webrtc-star/'\n          ]\n        },\n        // If you want to connect to the public bootstrap nodes, remove the next line\n        Bootstrap: [\n          '/dns4/ams-1.bootstrap.libp2p.io/tcp/443/wss/p2p/QmSoLer265NRgSp2LA3dPaeykiS1J6DifTC88f5uVQKNAd',\n          '/dns4/lon-1.bootstrap.libp2p.io/tcp/443/wss/p2p/QmSoLMeWqB7YGVLJN3pNLQpmmEk35v6wYtsMGLzSr5QBU3',\n          '/dns4/sfo-3.bootstrap.libp2p.io/tcp/443/wss/p2p/QmSoLPppuBtQSGwKDZT2M73ULpjvfd3aZ6ha4oFGL1KrGM',\n          '/dns4/sgp-1.bootstrap.libp2p.io/tcp/443/wss/p2p/QmSoLSafTMBsPKadTEgaXctDQVcqN88CNLHXMkTNwMKPnu',\n          '/dns4/nyc-1.bootstrap.libp2p.io/tcp/443/wss/p2p/QmSoLueR4xBeUbY9WZ9xGUUxunbKWcrNFTDAadQJmocnWm',\n          '/dns4/nyc-2.bootstrap.libp2p.io/tcp/443/wss/p2p/QmSoLV4Bbm51jM9C4gDYZQ9Cy3U6aXMJDAbzgu2fzaDs64',\n          '/dns4/node0.preload.ipfs.io/tcp/443/wss/p2p/QmZMxNdpMkewiVZLMRxaNxUeZpDUb34pWjZ1kZvsd16Zic',\n          '/dns4/node1.preload.ipfs.io/tcp/443/wss/p2p/Qmbut9Ywz9YEDrz8ySBSgWyJk41Uvm2QJPhwDJzJyGFsD6',\n          '/dns4/node2.preload.ipfs.io/tcp/443/wss/p2p/QmV7gnbW5VTcJ3oyM2Xk1rdFBJ3kTkvxc87UFGsun29STS',\n          '/dns4/node3.preload.ipfs.io/tcp/443/wss/p2p/QmY7JB6MQXhxHvq7dBDh4HpbH29v4yE9JRadAVpndvzySN'\n        ],\n        // Bootstrap: ['/dns4/ws-star.discovery.libp2p.io/tcp/443/wss/p2p-websocket-star/ipfs/QmfLfCnQPGgpP6FvsrzifWmzP647GSayeXfCiXhFDLzc2p', '/dns4/ws-star.discovery.libp2p.io/tcp/443/wss/p2p-websocket-star/', '/dns4/ams-1.bootstrap.libp2p.io/tcp/443/wss/p2p/QmSoLer265NRgSp2LA3dPaeykiS1J6DifTC88f5uVQKNAd', '/dns4/lon-1.bootstrap.libp2p.io/tcp/443/wss/p2p/QmSoLMeWqB7YGVLJN3pNLQpmmEk35v6wYtsMGLzSr5QBU3', '/dns4/sfo-3.bootstrap.libp2p.io/tcp/443/wss/p2p/QmSoLPppuBtQSGwKDZT2M73ULpjvfd3aZ6ha4oFGL1KrGM', '/dns4/sgp-1.bootstrap.libp2p.io/tcp/443/wss/p2p/QmSoLSafTMBsPKadTEgaXctDQVcqN88CNLHXMkTNwMKPnu', '/dns4/nyc-1.bootstrap.libp2p.io/tcp/443/wss/p2p/QmSoLueR4xBeUbY9WZ9xGUUxunbKWcrNFTDAadQJmocnWm', '/dns4/nyc-2.bootstrap.libp2p.io/tcp/443/wss/p2p/QmSoLV4Bbm51jM9C4gDYZQ9Cy3U6aXMJDAbzgu2fzaDs64',    '/dns4/1.pubsub.aira.life/tcp/443/wss/ipfs/QmdfQmbmXt6sqjZyowxPUsmvBsgSGQjm4VXrV7WGy62dv8', '/dns4/2.pubsub.aira.life/tcp/443/wss/ipfs/QmPTFt7GJ2MfDuVYwJJTULr6EnsQtGVp8ahYn9NSyoxmd9', '/dns4/3.pubsub.aira.life/tcp/443/wss/ipfs/QmWZSKTEQQ985mnNzMqhGCrwQ1aTA6sxVsorsycQz9cQrw'],\n        Pubsub: {\n          Enabled: true\n        }\n      }\n    });\n\n    try {\n      this.state.info = await this.state.node.id();\n      console.log(this.state.info, 'info');\n\n      //   const addressesHtml =   this.state.info.addresses\n      //     .map(address => {\n      //       return `<li><pre>${address}</pre></li>`;\n      //     })\n      //     .join('');\n      // $nodeId.innerText = info.id;\n      // $nodeAddresses.innerHTML = addressesHtml;\n      // $allDisabledButtons.forEach(b => {\n      //   b.disabled = false;\n      // });\n      // $allDisabledInputs.forEach(b => {\n      //   b.disabled = false;\n      // });\n      // $allDisabledElements.forEach(el => {\n      //   el.classList.remove('disabled');\n      // });\n    } catch (err) {\n      return onError(err);\n    }\n\n    onSuccess('Node is ready.');\n    // bootstrapUserFile();\n    // updateStorage();\n    try {\n      await subscribeToWorkpsace();\n    } catch (err) {\n        console.log(err,'errrr');\n        \n      err.message = `Failed to subscribe to the workspace: ${err.message}`;\n      //return onError(err);\n    }\n\n    window.addEventListener('hashchange', async () => {\n      try {\n        await workspaceUpdated();\n      } catch (err) {\n        err.message = `Failed to subscribe to the updated workspace: ${err.message}`;\n        onError(err);\n      }\n    });\n  }\n  render() {\n    const { info } = this.state;\n    return (\n      <span></span>\n      //   <form onSubmit={this.handleSubmit}>\n      //     <div>\n      //       <label htmlFor=\"title\">Title</label>\n      //       <input\n      //         type=\"text\"\n      //         id=\"title\"\n      //         value={title}\n      //         onChange={this.handleChange}\n      //       />\n      //     </div>\n      //     <button type=\"submit\">SAVE</button>\n      //   </form>\n    );\n  }\n}\n\nconst IPFS = connect(null, mapDispatchToProps)(IPFSNode);\n\n/* ===========================================================================\n           Pubsub\n           =========================================================================== */\n\nconst messageHandler = message => {\n  // const myNode = info.id.toString()\n  // const hash = message.data.toString()\n  // const messageSender = message.from\n  // // append new files when someone uploads them\n  // if (myNode !== messageSender && !FILES.includes(hash)) {\n  //   // need to fix this later on may be we can check for var!\n  //   $cidInput.value = hash\n  //   getFile(hash)\n  //   //getFilePrivate(hash)\n  // }\n  // else if (myNode !== messageSender && !PFILES.includes(hash)) {\n  //   // need to fix this later on may be we can check for var!\n  //   $cidInputPrivate.value = hash\n  //   getFilePrivate(hash)\n  // }\n};\n\nconst subscribeToWorkpsace = async () => {\n  await this.state.node.pubsub.subscribe(this.state.workspace, messageHandler);\n  const msg = `Subscribed to workspace '${this.state.workspace}'`;\n  // $logs.innerHTML = msg\n};\n\n// unsubscribe from old workspace and re-subscribe to new one\nconst workspaceUpdated = async () => {\n  await this.state.node.pubsub.unsubscribe(this.state.workspace);\n  // clear files from old workspace\n  // FILES = []\n  // $fileHistory.innerHTML = ''\n  // $fileHistoryPrivate.innerHTML = ''\n\n  this.state.workspace = window.location.hash.replace(/^#/, '');\n  await subscribeToWorkpsace();\n};\n\nconst publishHash = hash => {\n  const data = Buffer.from(hash);\n  return this.state.node.pubsub.publish(this.state.workspace, data);\n};\nexport default IPFS;\n","module.exports = __webpack_public_path__ + \"static/media/preview.2f338244.jpg\";","import React, { Fragment } from 'react';\n\nimport { Grid, Container , Card} from '@material-ui/core';\n\nimport { ExampleWrapperSeamless } from '../../layout-components';\nimport { Header, FileUploader, FileTable } from '../../layout-components';\nimport { IPFSNode } from '../../page-components';\n\nimport hero9 from '../../assets/images/preview.jpg';\n\nconst LandingPage = () => {\n  return (\n    <Fragment>\n      <Header />\n         <div className=\"hero-wrapper bg-composed-wrapper bg-premium-dark min-vh-100\">\n          <div className=\"flex-grow-1 w-100 d-flex align-items-center\">\n            <div\n              className=\"bg-composed-wrapper--image opacity-5\"\n              style={{ backgroundImage: 'url(' + hero9 + ')' }}\n            />\n            <IPFSNode />\n            <div className=\"bg-composed-wrapper--bg bg-second opacity-3\" />\n            <div className=\"bg-composed-wrapper--bg bg-red-lights opacity-1\" />\n            <div className=\"bg-composed-wrapper--content pt-5 pb-2 py-lg-5 table-responsive\">\n              <Container maxWidth=\"xl\" className=\"pb-5\">\n                <Grid container spacing={5}>\n                  <Grid\n                    item\n                     className=\"px-0 mx-auto d-flex align-items-center\">\n                    <div className=\"text-center \">\n                      {/* <Tooltip arrow placement=\"top\" title=\"Version: 1.0.0\">\n                      <span className=\"badge badge-success px-4 text-uppercase h-auto py-1\">\n                      </span>\n                    </Tooltip> */}\n                      <div className=\"px-4 px-sm-0 text-white mt-4\">\n                        {/* <h1 className=\"display-2 mb-5 font-weight-bold\">\n                      Web3 Drive\n\n                      </h1> */}\n\n                        <FileUploader />\n\n                        <FileTable />\n                        {/* <p className=\"font-size-xl text-black mb-3\">\n                      Your decentralized storage hub\n.\n                      </p>\n                      <p className=\"text-black font-size-lg\">\n                      Web3 Drive is the user gate for the decentralized storage world. it acts as a decentralized drive where user can upload, download his large files in a secure way .\n                      </p> */}\n                        <div className=\"divider border-2 border-light my-5 border-light opacity-2 mx-auto rounded-circle w-50\" />\n                      </div>\n                    </div>\n                  </Grid>\n                </Grid>\n              </Container>\n            </div>\n          </div>\n        </div>\n     </Fragment>\n  );\n};\n\nexport default LandingPage;\n"],"sourceRoot":""}